{"version":3,"sources":["Components/Head.js","Components/BoardList.js","Components/Create.js","Components/Read.js","Components/Update.js","App.js","reportWebVitals.js","index.js"],"names":["Head","Component","BoardList","data","this","props","data_list","sort","a","b","no","table_list","i","push","href","onClick","e","preventDefault","onSetNumber","bind","title","author","write_date","view_count","length","className","onChangePage","Create","action","onSubmit","onCreateData","target","value","content","name","type","defaultValue","size","required","cols","rows","Read","dataElement","colSpan","onChangeMode","Update","state","inputFormHandler","setState","onUpdateData","onChange","App","max_data_no","count","status","_selected_data_no","console","log","article","_status","selected_data_no","_author","_title","_content","_data","Array","from","Date","toISOString","substring","selected_data","window","confirm","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee85e771.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Head extends Component{\r\n    render(){\r\n        return(\r\n            <header>\r\n                <h1>Board</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Head;","import { Component } from \"react\";\r\n\r\nclass BoardList extends Component{\r\n    \r\n    render(){\r\n        let data = this.props.data_list;\r\n        data.sort(function(a, b){ return b.no - a.no });\r\n        let table_list = [];\r\n\r\n        for (let i = 0; i<data.length; i++){\r\n            table_list.push(\r\n                <tr key={data[i].no}>\r\n                    <td>{ data[i].no }</td>\r\n                    <td>\r\n                        <a href=\"dummy.html\" onClick={function(e){\r\n                            e.preventDefault();\r\n                            this.props.onSetNumber(data[i].no);\r\n                        }.bind(this)}>{ data[i].title }</a>\r\n                    </td>\r\n                    <td>{ data[i].author }</td>\r\n                    <td>{ data[i].write_date }</td>\r\n                    <td>{ data[i].view_count }</td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <article>\r\n                <div className=\"pageTitle\">\r\n                    <h2>목록 보기</h2>\r\n                </div>\r\n\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>글번호</th>\r\n                            <th className=\"contentTitle\">제목</th>\r\n                            <th>작성자</th>\r\n                            <th>작성일</th>\r\n                            <th>조회수</th>\r\n                        </tr>\r\n                        {table_list}\r\n                    </tbody>    \r\n                </table>\r\n\r\n                <div className=\"buttons\">\r\n                    <button onClick={function(){\r\n                        this.props.onChangePage(\"write\");\r\n                    }.bind(this)}>글쓰기</button>\r\n                </div>\r\n\r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default BoardList;","import { Component } from \"react\";\r\n\r\nclass Create extends Component{\r\n    render(){\r\n        return(\r\n            <article>\r\n                <div className=\"pageTitle\">\r\n                    <h2>글 쓰 기</h2>\r\n                </div>\r\n\r\n                <form action=\"#\" onSubmit={function(e){\r\n                    e.preventDefault();\r\n                    this.props.onCreateData(e.target.author.value, e.target.title.value, e.target.content.value);\r\n                }.bind(this)}>\r\n                    <table className=\"formTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>작성자명</th>\r\n                                <td><input name=\"author\" type=\"text\" defaultValue=\"홍길동\" size=\"20\" /></td>\r\n                            </tr>\r\n                            \r\n                            <tr>\r\n                                <th>제목</th>\r\n                                <td><input name=\"title\" type=\"text\" size=\"100\" required /></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th>내용</th>\r\n                                <td><textarea name=\"content\" cols=\"100\" rows=\"30\" required></textarea></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"buttons\">\r\n                        <button type=\"submit\">등록</button>\r\n                    </div>\r\n\r\n                </form>\r\n                \r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Create;","import { Component } from \"react\";\r\n\r\nclass Read extends Component{\r\n    render(){\r\n        let dataElement = this.props.dataElement;\r\n\r\n        return(\r\n            <article>\r\n                <div className=\"pageTitle\">\r\n                    <h2>내용 보기</h2>\r\n                </div>\r\n\r\n                <table className=\"formTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>제목</th>\r\n                            <td colSpan=\"5\">\r\n                                <h3>{dataElement.title}</h3>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <th>작성자명</th>\r\n                            <td>{dataElement.author}</td>\r\n                            <th className=\"inTh\">수정일</th>\r\n                            <td>{dataElement.write_date}</td>\r\n                            <th className=\"inTh\">조회수</th>\r\n                            <td>{dataElement.view_count}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className=\"content\">\r\n                            <th>내용</th>\r\n                            <td colSpan=\"5\">{dataElement.content}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"buttons\">\r\n                    <button type=\"button\" onClick={function(e){\r\n                        e.preventDefault();\r\n                        this.props.onChangeMode(\"list_view\");\r\n                    }.bind(this)}>리스트</button>\r\n                    <button type=\"button\" onClick={function(e){\r\n                        e.preventDefault();\r\n                        this.props.onChangeMode(\"update\");\r\n                    }.bind(this)}>수정</button>\r\n                    <button type=\"button\" onClick={function(e){\r\n                        this.props.onChangeMode(\"delete\");\r\n                    }.bind(this)}>삭제</button>\r\n                </div>\r\n                \r\n                \r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Read;","import { Component } from \"react\";\r\n\r\nclass Update extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            author: this.props.dataElement.author,\r\n            title: this.props.dataElement.title,\r\n            content: this.props.dataElement.content\r\n        };\r\n        this.inputFormHandler = this.inputFormHandler.bind(this);\r\n    }\r\n\r\n    inputFormHandler(e){\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        //console.log(this.props.dataElement);\r\n        return(\r\n            <article>\r\n                <div className=\"pageTitle\">\r\n                    <h2>글 수정</h2>\r\n                </div>\r\n\r\n                <form action=\"#\" onSubmit={function(e){\r\n                    e.preventDefault();\r\n                    this.props.onUpdateData(e.target.author.value, e.target.title.value, e.target.content.value);\r\n                }.bind(this)}>\r\n                    <table className=\"formTable\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>작성자명</th>\r\n                                <td>\r\n                                    <input name=\"author\" type=\"text\" \r\n                                    value={this.state.author} size=\"20\" onChange={ this.inputFormHandler } />\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                            <tr>\r\n                                <th>제목</th>\r\n                                <td><input name=\"title\" type=\"text\" size=\"100\" required \r\n                                    value={this.state.title} onChange={ this.inputFormHandler }/>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <th>내용</th>\r\n                                <td>\r\n                                    <textarea name=\"content\" cols=\"100\" rows=\"30\" required\r\n                                        value={this.state.content} onChange={ this.inputFormHandler }>\r\n                                    </textarea>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"buttons\">\r\n                        <button type=\"submit\">수정</button>\r\n                    </div>\r\n\r\n                </form>\r\n                \r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Update;","import './App.css';\nimport { Component } from 'react';\nimport Head from './Components/Head';\nimport BoardList from './Components/BoardList';\nimport Create from './Components/Create';\nimport Read from './Components/Read';\nimport Update from './Components/Update';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.max_data_no = 0;\n    this.count = 0;\n    this.state = {\n      status : \"list_view\",\n      _selected_data_no: 0,\n      data : [\n        {\n          no: 1, author: \"유재석\", write_date: \"2021-01-01\", view_count: 10, \n          title: \"HTML\", content: \"HTML is HyperText Markup Language.\"\n        },\n\n        {\n          no: 2, author: \"박명수\", write_date: \"2021-02-02\", view_count: 20, \n          title: \"CSS\", content: \"CSS is Cascading Style Sheet.\"\n        },\n\n        {\n          no: 3, author: \"정형돈\", write_date: \"2021-03-03\", view_count: 30, \n          title: \"JavaScript\", content: \"JavaScript works page behind.\"\n        }\n      ]\n    };\n  }\n\n  render(){\n    console.log(this.state.data[0].view_count);\n    let article = null;\n\n    if (this.state.status === \"list_view\"){\n      //props는 호출할 때 (초기값으로 전달할 값을 지정해 주는 것\n      article = <BoardList \n        data_list={this.state.data} \n\n        onChangePage={function(_status){\n          this.setState({ \n            status: _status \n          });\n        }.bind(this)}\n        \n        onSetNumber={function(_selected_data_no){\n          for (let i = 0; i < this.state.data.length; i++){\n            if (this.state.data[i].no === _selected_data_no){\n              this.state.data[i].view_count ++;\n            }\n          }\n\n          this.setState({\n            status: \"read\",\n            selected_data_no: _selected_data_no\n          });\n        }.bind(this)}\n      />;\n\n    } else if (this.state.status === \"write\"){\n      article = <Create onCreateData={function(_author, _title, _content){\n        //state.data 배열 복사\n        let _data = Array.from(this.state.data);\n\n        //_data의 배열 요소 중 id의 최대값 구하기\n        this.max_data_no = _data[0].no;\n        for (let i = 0; i < _data.length; i++){\n          if (this.max_data_no < _data[i].no){\n            this.max_data_no = _data[i].no\n          }\n        }\n\n        //_data에 요소(객체) 삽입하기\n        _data.push({\n          no: this.max_data_no + 1, \n          author: _author, \n          write_date: new Date().toISOString().substring(0,10), \n          view_count: 0, \n          title: _title, \n          content: _content\n        });\n\n        this.setState({\n          data: _data,\n          status: \"read\",\n          selected_data_no: this.max_data_no + 1\n        });\n\n      }.bind(this)} />\n\n    } else if (this.state.status === \"read\"){\n      let selected_data = null;\n      for (let i = 0; i < this.state.data.length; i++){\n        if (this.state.selected_data_no === this.state.data[i].no){\n          selected_data = this.state.data[i];\n          break;\n        }\n      }\n      \n      article = <Read \n        dataElement={ selected_data } \n        onChangeMode={function(_status){\n          if (_status === \"delete\"){\n            if (window.confirm(\"이 게시물을 삭제할까요?\")){\n              let _data = Array.from(this.state.data);\n              for (let i = 0; i < _data.length; i++){\n                if (this.state.selected_data_no === _data[i].no){\n                  _data.splice(i, 1);\n                  break;\n                }\n              }\n\n              this.setState({\n                data: _data,\n                status: \"list_view\"\n              });\n            } \n          } else {\n            this.setState({\n              status: _status\n            });\n          }\n        }.bind(this)}\n      />\n    } else if (this.state.status === \"update\"){\n      let selected_data = null;\n      let _data = Array.from(this.state.data);\n\n      for (let i = 0; i < this.state.data.length; i++){\n        if (this.state.selected_data_no === _data[i].no){\n          selected_data = _data[i];\n          break;\n        }\n      }\n      article = <Update \n        dataElement={ selected_data } \n\n        onUpdateData={function(_author, _title, _content){\n          selected_data.author = _author;\n          selected_data.title = _title;\n          selected_data.content = _content;\n          \n          for (let i = 0; i < _data.length; i++){\n            if (this.state.selected_data_no === _data[i].no){\n              _data[i].author = _author;\n              _data[i].title = _title;\n              _data[i].content = _content;\n              _data[i].write_date = new Date().toISOString().substring(0, 10);\n              break;\n            }\n          }\n\n          this.setState({\n            data: _data,\n            status: \"read\"\n          });\n        }.bind(this)}\n      />\n    } \n    return(\n      <div className=\"App\">\n        <Head />\n\n        {article}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}